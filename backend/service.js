'use strict'

/* Imports */

import { getDatabaseInstance } from "./database.js"

/* By importing this module in index.js:
   the code to start the db is automatically
   fired - accessing a single database instance
*/
let db;
getDatabaseInstance()
    .then(dbinstance => db = dbinstance)
    .catch(err => console.error(err));

/* -- Services -- */

/* function getStudent(studentId){
    return new Promise((resolve, reject) => {

        const sql = 'SELECT * FROM student WHERE studentId = ?';
        db.get(sql, [studentId], (err, row) => {

            // error while accessing DB 
            if (err) {
                // the caller can catch an error
                return reject(err);
            }
            
            // row is null/undefined/empty
            if (!row) {
                // student not found or has no data -->
                // return a 'null' content
                return resolve(null);
            }

            else {
                // Data structure to be sent to the client according to requirements
                const student = 
                    {
                        name: row.name,
                        surname: row.surname,
                        dateOfBirth: {
                            day: row.dayofbirth,
                            month: row.monthofbirth,
                            year: row.yearofbirth,
                        }
                        //...
                    }

                    // let's send it back as a result
                    return resolve(student);
                }
            })
        })
    }
*/

/*
function postStudent(student) {
    return new Promise((resolve, reject) => {
        const insertQuery = `
            INSERT INTO student (name, surname, dayofbirth, monthofbirth, yearofbirth)
            VALUES (?, ?, ?, ?, ?)`;

        const data_values = [student.name, student.surname, student.dateofbirth.dayofbirth, student.dateofbirth.monthofbirth, student.dateofbirth.yearofbirth];

        db.run(insertQuery, data_values, function (err) {
            if (err) {
                reject(err);
            } else {
                // return the autogenerated id for the resource
                resolve(this.lastID);
            }
        });
    });
} */





/* By importing the entire service.js, you'll receive all these functions */
export default {
    //getStudent,
    //postStudent
};